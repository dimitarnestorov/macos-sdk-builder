name: SDKs

on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        version:
          - "12.3"
          - "12.2.1"
          - "12.2"

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.5'
    - name: Install blacktop/ipsw
      run: |
        curl https://github.com/blacktop/ipsw/releases/download/v3.1.91/ipsw_3.1.91_macOS_x86_64.tar.gz --output ipsw.tar.gz --location
        tar -xzvf ipsw.tar.gz
        sudo mv ipsw /usr/local/bin
    - name: Downloading IPSW
      run: |
        ipsw download ipsw --version ${{ matrix.version }} --device Macmini9,1
    - name: Extracting dyld_shared_cache from ipsw
      run: |
        ipsw extract -d $(ls *.ipsw | xargs) --dyld-arch arm64e
        mv $(find . -name dyld_shared_cache_arm64 | xargs) ./
    - name: Set up python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install progressbar2 k2l dyldextractor
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Extracting binaries from dyld shared cache
      run: |
        dyldex_all dyld_shared_cache_arm64
        mv binaries/System ./
    - name: Building SDK
      run: |
        python sdk_builder.py
    - name: Compressing Artifact
      run: | 
        mv .sdkbuilder/System/Library/Frameworks ./Frameworks
        mv .sdkbuilder/System/Library/PrivateFrameworks ./PrivateFrameworks
        mkdir iOSSupport
        mv .sdkbuilder/System/iOSSupport/System/Library/Frameworks ./iOSSupport/Frameworks
        mv .sdkbuilder/System/iOSSupport/System/Library/PrivateFrameworks ./iOSSupport/PrivateFrameworks
        zip -r SDK.zip Frameworks/ PrivateFrameworks/ iOSSupport/
    - name: Upload zipped headers
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ${{ matrix.version }}-SDK.zip
        path: SDK.zip


  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 1.0.0
          release_name: ktool | macOS 12.2-12.3 SDKs
          draft: false
          prerelease: false
      - name: Attach binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./*; do               #loop the assets in the bin folder
            if [ -d "$asset" ]
            then
              zip -r $asset.zip $asset/
              assets+=("-a" "$asset.zip")
            fi
          done
          hub release edit "${assets[@]}" -m "macOS 12.2-12.3 SDKs" "1.0.0" 
